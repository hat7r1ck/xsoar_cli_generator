<!-- Case Notes Section -->
<div id="case-notes" class="tab-content">
    <h2>Case Notes Generator</h2>

    <div class="form-container">
        <label for="detection-time">Detection Time:</label>
        <input type="text" id="detection-time" oninput="updateCaseNotes()">

        <label for="username">Username:</label>
        <input type="text" id="username" oninput="updateCaseNotes()">

        <label for="hostname">Host Name:</label>
        <input type="text" id="hostname" oninput="updateCaseNotes()">

        <label for="detection-name">Detection Name:</label>
        <input type="text" id="detection-name" oninput="updateCaseNotes()">

        <label for="rule-name">Rule Name:</label>
        <input type="text" id="rule-name" oninput="updateCaseNotes()">

        <label for="rule-description">Rule Description:</label>
        <textarea id="rule-description" oninput="updateCaseNotes()"></textarea>

        <label for="aduser-input">AD User Lookup (Copy from Get-ADUser):</label>
        <textarea id="aduser-input" placeholder="Paste raw ADUser output" oninput="updateCaseNotes()"></textarea>

        <label for="investigation-notes">Investigation Notes:</label>
        <textarea id="investigation-notes" oninput="updateCaseNotes()"></textarea>

        <label for="severity">30-Day Lookback Severity:</label>
        <select id="severity" onchange="updateCaseNotes()">
            <option value="No change in severity">No change in severity</option>
            <option value="Requires a change in severity">Requires a change in severity</option>
        </select>

        <label for="malicious-determination">Determination:</label>
        <select id="malicious-determination" onchange="updateCaseNotes()">
            <option value="Not Malicious and no further action is needed">Not Malicious and no further action is needed</option>
            <option value="Malicious">Malicious</option>
        </select>

        <!-- Lookback Section -->
        <div class="checkbox-container">
            <h4>Lookback</h4>
            <div class="checkbox-item">
                <input type="checkbox" id="checked-cases" onchange="updateCaseNotes()"> Checked prior cases
            </div>
            <div class="checkbox-item">
                <input type="checkbox" id="checked-hosts" onchange="updateCaseNotes()"> Checked prior hosts
            </div>
            <div class="checkbox-item">
                <input type="checkbox" id="checked-ioc" onchange="updateCaseNotes()"> Checked prior IoCs
            </div>
        </div>

        <label for="alert-link">Alert Details (Paste Detection Link):</label>
        <input type="text" id="alert-link" placeholder="https://example.com/detection" oninput="updateCaseNotes()">

        <!-- Case Notes Output -->
        <h3>Generated Case Notes</h3>
        <textarea id="case-notes-output" readonly></textarea>

        <div class="button-container">
            <button onclick="copyNotes()">Copy Notes</button>
            <button onclick="resetCaseNotes()">Reset</button>
        </div>
    </div>
</div>

<script>
    function updateCaseNotes() {
        let detectionTime = document.getElementById("detection-time").value.trim();
        let username = document.getElementById("username").value.trim();
        let hostname = document.getElementById("hostname").value.trim();
        let detectionName = document.getElementById("detection-name").value.trim();
        let ruleName = document.getElementById("rule-name").value.trim();
        let ruleDescription = document.getElementById("rule-description").value.trim();
        let aduserInput = document.getElementById("aduser-input").value.trim();
        let investigationNotes = document.getElementById("investigation-notes").value.trim();
        let severity = document.getElementById("severity").value.trim();
        let maliciousDetermination = document.getElementById("malicious-determination").value.trim();
        let alertLink = document.getElementById("alert-link").value.trim();

        // Lookback checkboxes
        let checkedItems = [];
        if (document.getElementById("checked-cases").checked) checkedItems.push("- Checked prior cases");
        if (document.getElementById("checked-hosts").checked) checkedItems.push("- Checked prior hosts");
        if (document.getElementById("checked-ioc").checked) checkedItems.push("- Checked prior IoCs");
        let checkedItemsText = checkedItems.length > 0 ? checkedItems.join("\n") : "";

        // AD User Parsing
        let adUsername = aduserInput.match(/^Name\s*:\s*(.+)$/im)?.[1] || "Unknown";
        let adTitle = aduserInput.match(/^Title\s*:\s*(.+)$/im)?.[1] || "Unknown";

        // Alert Link Formatting
        let alertDetails = alertLink ? `[Link to detection](${alertLink})` : "N/A";

        // Build Case Notes
        let caseNotes = `
On **${detectionTime}**, the CTFC observed an XSOAR case for the user **${username}** seen generating a detection **${detectionName}** on the host **${hostname}**.

> **Rule Name:** ${ruleName}  
> **Rule Description:** ${ruleDescription}  

The way in which this event occurred was due to the user **${adUsername}** | **${adTitle}**  
${investigationNotes}

Based on a 30-day lookback: **${severity}**  

CTFC has declared this event to be **${maliciousDetermination}**.  

## **Analysis**
${checkedItemsText}

### **Alert Details**
${alertDetails}
        `.trim();

        document.getElementById("case-notes-output").value = caseNotes;
    }

    function copyNotes() {
        let notes = document.getElementById("case-notes-output").value;
        navigator.clipboard.writeText(notes).then(() => {
            alert("Case notes copied!");
        });
    }

    function resetCaseNotes() {
        document.querySelectorAll("#case-notes input, #case-notes textarea, #case-notes select").forEach(field => {
            field.value = field.tagName === "SELECT" ? field.options[0].value : "";
        });

        document.querySelectorAll("#case-notes input[type=checkbox]").forEach(checkbox => {
            checkbox.checked = false;
        });

        document.getElementById("case-notes-output").value = "";
    }
</script>

<style>
    .checkbox-container {
        border: 2px solid #00ff00;
        padding: 10px;
        margin: 10px 0;
        background-color: #111;
    }
    .checkbox-item {
        display: flex;
        align-items: center;
        margin-bottom: 5px;
    }
    .checkbox-item input {
        margin-right: 10px;
    }
    #case-notes-output {
        width: 100%;
        height: 150px;
        background-color: #111;
        color: #00ff00;
        border: 2px solid #00ff00;
        white-space: pre-wrap;
    }
</style>
