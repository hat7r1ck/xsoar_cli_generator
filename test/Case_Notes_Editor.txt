<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <meta name="color-scheme" content="dark">
  <title>CTFC Toolkit – Case Notes Editor</title>
  <style>
    /* Global styles */
    body {
      background-color: #1e1e2e; /* Mocha Base */
      color: #cdd6f4;           /* Mocha Text */
      font-family: 'JetBrains Mono', monospace;
      margin: 20px;
      text-align: center;
    }
    /* Button to open the modal */
    #openNotesEditor {
      padding: 10px 15px;
      border: 2px solid #89b4fa;
      background-color: #45475a;
      color: #cdd6f4;
      border-radius: 4px;
      cursor: pointer;
      font-size: 1em;
      transition: background-color 0.3s, color 0.3s;
    }
    #openNotesEditor:hover {
      background-color: #89b4fa;
      color: #11111b;
    }
    /* Read-only output for case notes */
    .output-box {
      margin: 20px auto;
      padding: 10px;
      background-color: #45475a;
      border: 2px solid #89b4fa;
      border-radius: 6px;
      box-shadow: 0 0 10px #89b4fa;
      font-family: Consolas, monospace;
      white-space: pre-wrap;
      word-wrap: break-word;
      text-align: left;
      max-width: 700px;
    }
    /* Modal overlay placed directly under body */
    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0, 0, 0, 0.7);
      display: none; /* Hidden by default */
      align-items: center;
      justify-content: center;
      z-index: 10000;
    }
    /* Modal container with isolated styling */
    .modal {
      background-color: #313244;  /* Mocha Surface0 */
      color: #cdd6f4;
      font-family: 'JetBrains Mono', monospace;
      padding: 20px;
      border: 2px solid #89b4fa;  /* Theme Accent */
      border-radius: 6px;
      box-shadow: 0 0 15px #89b4fa;
      max-width: 600px;
      width: 90%;
      text-align: left;
      margin: 0; /* Reset inherited margins */
    }
    /* Ensure modal's inner elements are left-aligned */
    .modal * {
      text-align: left !important;
    }
    /* Modal header styling */
    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
      border-bottom: 1px solid #89b4fa;
      padding-bottom: 5px;
    }
    /* Modal textarea styling */
    .modal textarea {
      width: 100%;
      height: 200px;
      padding: 10px;
      border: 1px solid #7f849c;
      border-radius: 4px;
      background-color: #45475a;
      color: #cdd6f4;
      box-sizing: border-box;
      resize: vertical;
      font-family: inherit;
    }
    /* Modal buttons container */
    .modal-buttons {
      margin-top: 10px;
      display: flex;
      gap: 10px;
      justify-content: flex-end;
    }
    /* Modal buttons styling */
    .modal-buttons button {
      padding: 8px 12px;
      border: 2px solid #89b4fa;
      background-color: #45475a;
      color: #cdd6f4;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s, color 0.3s;
      font-family: inherit;
    }
    .modal-buttons button:hover {
      background-color: #89b4fa;
      color: #11111b;
    }
  </style>
</head>
<body>
  <h1>CTFC Toolkit – Case Notes Editor</h1>
  <!-- Button to open modal -->
  <button id="openNotesEditor">✎ Edit Notes</button>
  
  <!-- Read-only output for case notes -->
  <div class="output-box" id="caseNotesOutput">
    Case Notes will appear here...
  </div>
  
  <!-- Modal Overlay (placed directly under body) -->
  <div class="modal-overlay" id="notesModal">
    <div class="modal">
      <div class="modal-header">
        <h3>Edit Case Notes</h3>
        <!-- Close button (×) -->
        <button onclick="closeNotesEditor()" style="background: none; border: none; font-size: 1.5em; color: #cdd6f4; cursor: pointer;">&times;</button>
      </div>
      <textarea id="notesEditor" placeholder="Enter or modify your case notes here..."></textarea>
      <div class="modal-buttons">
        <button onclick="saveNotes()">Save</button>
        <button onclick="copyNotes()">Copy to Clipboard</button>
        <button onclick="previewNotes()">Preview</button>
      </div>
    </div>
  </div>
  
  <script>
    // Get DOM elements
    const openNotesEditorBtn = document.getElementById("openNotesEditor");
    const notesModal = document.getElementById("notesModal");
    const notesEditor = document.getElementById("notesEditor");
    const caseNotesOutput = document.getElementById("caseNotesOutput");
    
    // Open the modal and load current case notes into editor
    openNotesEditorBtn.addEventListener("click", () => {
      notesEditor.value = caseNotesOutput.textContent.trim();
      notesModal.style.display = "flex";
    });
    
    // Close modal function
    function closeNotesEditor() {
      notesModal.style.display = "none";
    }
    
    // Save notes: update the output box and close the modal
    function saveNotes() {
      caseNotesOutput.textContent = notesEditor.value;
      closeNotesEditor();
    }
    
    // Copy notes to clipboard
    function copyNotes() {
      navigator.clipboard.writeText(notesEditor.value)
        .then(() => alert("Case notes copied to clipboard!"))
        .catch(err => alert("Error copying notes: " + err));
    }
    
    // Preview notes: update output box (or implement markdown rendering if desired)
    function previewNotes() {
      // Here we simply update the output; you can extend this to render markdown
      caseNotesOutput.textContent = notesEditor.value;
    }
  </script>
</body>
</html>
