<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="color-scheme" content="dark">
    <title>XSOAR CLI & Search Tools</title>
    <style>
        body {
            background-color: #1e1e1e;
            color: #00ff00;
            font-family: 'Courier New', Courier, monospace;
            text-align: center;
        }
        .tab-container {
            margin-bottom: 20px;
        }
        .tab-button {
            background-color: black;
            color: #00ff00;
            border: 2px solid #00ff00;
            padding: 10px;
            cursor: pointer;
            margin: 5px;
        }
        .tab-button:hover {
            background-color: #00ff00;
            color: black;
        }
        .tab-content {
            display: none;
            padding: 20px;
            border: 2px solid #00ff00;
            box-shadow: 0 0 10px #00ff00;
            margin-top: 20px;
        }
        input, button {
            padding: 10px;
            margin: 5px;
            background-color: black;
            color: #00ff00;
            border: 2px solid #00ff00;
        }
        button:hover {
            background-color: #00ff00;
            color: black;
        }
    </style>
</head>
<body>
    <h1>XSOAR CLI & Investigation Tools</h1>

    <div id="popup-warning" style="display:none; background-color: red; color: white; padding: 10px; text-align: center;">
        <strong>Pop-ups are blocked!</strong> To allow searches, enable pop-ups for this site in your browser settings.
    </div>
    

    <!-- Tab Navigation -->
    <div class="tab-container">
        <button class="tab-button" onclick="showTab('cli-generator')">XSOAR CLI</button>
        <button class="tab-button" onclick="showTab('case-notes')">Case Notes</button>
        <button class="tab-button" onclick="showTab('user-search')">User Search</button>
        <button class="tab-button" onclick="showTab('host-search')">Host Search</button>
        <button class="tab-button" onclick="showTab('xsoar-cases')">Previous XSOAR Cases</button>
        <button class="tab-button" onclick="showTab('osint')">OSINT Lookup</button>
    </div>

    <!-- XSOAR CLI Generator -->
    <div id="cli-generator" class="tab-content">
        <h2>XSOAR CLI Generator</h2>
        <p>Existing CLI generator content here...</p>
    </div>

    <!-- Case Notes Generator -->
    <div id="case-notes" class="tab-content">
        <h2>Case Notes</h2>
        <p>Existing case notes generator content here...</p>
    </div>

    <!-- User Search -->
    <div id="user-search" class="tab-content">
        <h2>User Search</h2>
        <input type="text" id="username" placeholder="Enter username">
        <button onclick="searchUser()">Search User</button>
        <button onclick="copySearchLinks('user')">Copy Links</button>
        <p id="copy-status-user" style="color: #00ff00;"></p>
    </div>

    <!-- Host Search -->
    <div id="host-search" class="tab-content">
        <h2>Host Search</h2>
        <input type="text" id="hostname" placeholder="Enter hostname">
        <button onclick="searchHost()">Search Host</button>
        <button onclick="copySearchLinks('host')">Copy Links</button>
        <p id="copy-status-host" style="color: #00ff00;"></p>
    </div>

    <!-- Previous XSOAR Cases -->
    <div id="xsoar-cases" class="tab-content">
        <h2>Previous XSOAR Cases</h2>
        <input type="text" id="xsoar-query" placeholder="Enter username or hostname">
        <button onclick="searchXSOAR()">Search XSOAR Cases</button>
    </div>

    <!-- OSINT Lookup -->
    <div id="osint" class="tab-content">
        <h2>OSINT Lookup</h2>
        <input type="text" id="ip-address" placeholder="Enter IP address">
        <button onclick="searchOSINT()">Search OSINT</button>
        <button onclick="copySearchLinks('osint')">Copy Links</button>
        <p id="copy-status-osint" style="color: #00ff00;"></p>
    </div>

    <script>
        // Function: showTab
        // Displays the selected tab and hides all others.
        function showTab(tabId) {
            document.querySelectorAll(".tab-content").forEach(tab => {
                tab.style.display = "none";
            });
            document.getElementById(tabId).style.display = "block";
        }

        // popup block checker 
        function openMultipleLinks(links) {
            let popupsBlocked = false;
            let openedTabs = [];

            links.forEach((link, index) => {
                setTimeout(() => {
                    let newTab = window.open(link, "_blank", "noopener,noreferrer");
                    if (!newTab || newTab.closed || typeof newTab.closed === "undefined") {
                        popupsBlocked = true;
                    } else {
                        openedTabs.push(newTab);
                    }
                }, index * 500);
            });

            // Final check AFTER all links are attempted
            setTimeout(() => {
                if (popupsBlocked) {
                    document.getElementById("popup-warning").style.display = "block";
                } else {
                    document.getElementById("popup-warning").style.display = "none";
                }
            }, (links.length + 1) * 500);
        }


        function searchUser() {
            const username = document.getElementById("username").value.trim();
            if (!username) {
                alert("Please enter a username.");
                return;
            }

            openMultipleLinks([
                `https://teamworks.company.com/search?query=${encodeURIComponent(username)}`,
                `https://servicenow.company.com/nav_to.do?uri=/sys_user.do?sysparm_query=user_name=${encodeURIComponent(username)}`
            ]);
        }

        function searchHost() {
            const hostname = document.getElementById("hostname").value.trim();
            if (!hostname) {
                alert("Please enter a hostname.");
                return;
            }

            openMultipleLinks([
                `https://cydex.company.com/search?query=${encodeURIComponent(hostname)}`,
                `https://servicenow.company.com/nav_to.do?uri=/cmdb_ci.do?sysparm_query=name=${encodeURIComponent(hostname)}`
            ]);
        }

        function searchOSINT() {
            const ip = document.getElementById("ip-address").value.trim();
            if (!ip) {
                alert("Enter an IP address to search OSINT.");
                return;
            }

            openMultipleLinks([
                `https://www.virustotal.com/gui/ip-address/${encodeURIComponent(ip)}`,
                `https://www.shodan.io/host/${encodeURIComponent(ip)}`,
                `https://www.abuseipdb.com/check/${encodeURIComponent(ip)}`
            ]);
        }

        function searchXSOAR() {
            const query = document.getElementById("xsoar-query").value.trim();
            if (!query) {
                alert("Please enter a username or hostname.");
                return;
            }

            openMultipleLinks([
                `https://xsoar.company.com/case/search?query=${encodeURIComponent(query)}`
            ]);
        }


        // Function: copySearchLinks
        // Copies the search links for User, Host, or OSINT searches.
        // Displays a success message when copied.
        function copySearchLinks(type) {
            let links = [];

            if (type === "user") {
                const username = document.getElementById("username").value.trim();
                if (!username) {
                    alert("Enter a username first.");
                    return;
                }
                links = [
                    `https://teamworks.company.com/search?query=${encodeURIComponent(username)}`,
                    `https://servicenow.company.com/nav_to.do?uri=/sys_user.do?sysparm_query=user_name=${encodeURIComponent(username)}`
                ];
                document.getElementById("copy-status-user").innerText = "User links copied!";
            } 
            
            else if (type === "host") {
                const hostname = document.getElementById("hostname").value.trim();
                if (!hostname) {
                    alert("Enter a hostname first.");
                    return;
                }
                links = [
                    `https://cydex.company.com/search?query=${encodeURIComponent(hostname)}`,
                    `https://servicenow.company.com/nav_to.do?uri=/cmdb_ci.do?sysparm_query=name=${encodeURIComponent(hostname)}`
                ];
                document.getElementById("copy-status-host").innerText = "Host links copied!";
            } 
            
            else if (type === "osint") {
                const ip = document.getElementById("ip-address").value.trim();
                if (!ip) {
                    alert("Enter an IP address first.");
                    return;
                }
                links = [
                    `https://www.virustotal.com/gui/ip-address/${encodeURIComponent(ip)}`,
                    `https://www.shodan.io/host/${encodeURIComponent(ip)}`,
                    `https://www.abuseipdb.com/check/${encodeURIComponent(ip)}`
                ];
                document.getElementById("copy-status-osint").innerText = "OSINT links copied!";
            }

            navigator.clipboard.writeText(links.join("\n")).then(() => {
                setTimeout(() => {
                    document.getElementById(`copy-status-${type}`).innerText = "";
                }, 3000);
            }).catch(err => {
                document.getElementById(`copy-status-${type}`).innerText = "Failed to copy.";
            });
        }

        // Function: addToHistory
        // Adds a searched user, host, or IP to the search history (keeps only last 5).
        function addToHistory(searchItem) {
            if (!searchHistory.includes(searchItem)) {
                searchHistory.unshift(searchItem);
                if (searchHistory.length > 5) searchHistory.pop(); // Keep only last 5 searches
            }
            updateHistoryDisplay();
        }

        // Function: updateHistoryDisplay
        // Updates the search history section in the UI.
        function updateHistoryDisplay() {
            const historyElement = document.getElementById("search-history");
            historyElement.innerHTML = "";
            searchHistory.forEach(item => {
                let li = document.createElement("li");
                li.innerText = item;
                historyElement.appendChild(li);
            });
        }
    </script>
</body>
</html>




function showTab(tabId) {
  // Remove 'active' class from all tabs
  document.querySelectorAll('.tab-button').forEach(tab => {
    tab.classList.remove('active');
  });
  // Hide all tab contents
  document.querySelectorAll('.tab-content').forEach(content => {
    content.style.display = 'none';
  });
  // Show the selected tab content
  document.getElementById(tabId).style.display = 'block';
  // Mark the clicked tab as active (assuming each tab button has an id that corresponds to the content)
  document.querySelector(`.tab-button[onclick*="${tabId}"]`).classList.add('active');
}

.tab-button.active {
  background-color: var(--theme-color);
  color: var(--ctp-crust);
}

