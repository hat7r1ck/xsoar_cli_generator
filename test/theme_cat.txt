[data-theme="latte"] {
  --theme-color: #d20f39;
  --background-color: #f5e0dc;
  --text-color: #4c4f69;
  --card-bg: #ffffff;
  --input-border: #dc8a78;
  --button-bg: #dfdad9;
  --button-hover: #e6cbd0;
  --accent-color: #8839ef;
  --heading-font: 'Fira Code', monospace;
}

[data-theme="mocha"] {
  --theme-color: #89b4fa;
  --background-color: #1e1e2e;
  --text-color: #cdd6f4;
  --card-bg: #313244;
  --input-border: #45475a;
  --button-bg: #45475a;
  --button-hover: #585b70;
  --accent-color: #f38ba8;
  --heading-font: 'JetBrains Mono', monospace;
}

body,
.form-container,
.tab-content,
input,
textarea,
select,
button {
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: var(--heading-font, 'Segoe UI', sans-serif);
}

.tab-button {
  background-color: var(--button-bg);
  border: 1px solid var(--input-border);
}

.tab-button:hover,
.active-tab {
  background-color: var(--button-hover);
  box-shadow: 0 0 8px var(--accent-color);
}

.form-container,
.theme-picker-container {
  background-color: var(--card-bg);
  border: 2px solid var(--theme-color);
  box-shadow: 0 0 10px var(--theme-color);
}

input,
textarea,
select {
  border: 2px solid var(--input-border);
  background-color: var(--background-color);
  color: var(--text-color);
}

h2,
h3 {
  color: var(--theme-color);
  text-shadow: 0 0 8px var(--theme-color);
}

.bug-report,
#readme ul li:hover {
  color: var(--accent-color);
}

#readme ul li {
  transition: color 0.3s;
}

<script>
const themeSelect = document.getElementById("theme-color");
const customColorInput = document.getElementById("custom-color");

function applyTheme(value) {
  // Remove current theme
  document.body.removeAttribute("data-theme");

  // If switching to Latte or Mocha
  if (value === "latte" || value === "mocha") {
    customColorInput.style.display = "none";
    document.body.setAttribute("data-theme", value);
  }
  // If switching to custom hex code
  else if (value === "custom") {
    customColorInput.style.display = "inline-block";
    const savedColor = localStorage.getItem("custom-theme-color");
    if (savedColor) {
      document.documentElement.style.setProperty("--theme-color", savedColor);
    }
  }
  // Default colors (Matrix style)
  else {
    customColorInput.style.display = "none";
    document.documentElement.style.setProperty("--theme-color", value);

    // Reset all Catppuccin overrides by removing data-theme
    document.body.removeAttribute("data-theme");

    // Reset other vars to Matrix defaults
    document.documentElement.style.setProperty("--background-color", "#000");
    document.documentElement.style.setProperty("--text-color", "#fff");
    document.documentElement.style.setProperty("--card-bg", "#111");
    document.documentElement.style.setProperty("--input-border", "#333");
    document.documentElement.style.setProperty("--button-bg", "#222");
    document.documentElement.style.setProperty("--button-hover", "#333");
    document.documentElement.style.setProperty("--accent-color", value);
    document.documentElement.style.setProperty("--heading-font", "'Segoe UI', sans-serif");
  }
}

themeSelect.addEventListener("change", function () {
  applyTheme(this.value);
});

customColorInput.addEventListener("input", function () {
  const color = this.value;
  localStorage.setItem("custom-theme-color", color);
  document.documentElement.style.setProperty("--theme-color", color);
});
</script>

<select id="theme-color">
  <option value="#00ff00" selected>Green (Matrix)</option>
  <option value="#ff0000">Red</option>
  <option value="#00aaff">Blue</option>
  <option value="#ff9900">Orange</option>
  <option value="#ffffff">White</option>
  <option value="latte">Catppuccin Latte</option>
  <option value="mocha">Catppuccin Mocha</option>
  <option value="custom">Custom...</option>
</select>
<input type="text" id="custom-color" placeholder="Enter Hex Code" style="display:none;">
